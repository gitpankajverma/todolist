{"version":3,"sources":["TodoListProject/ListItem.js","TodoListProject/ToDoList.js","index.js"],"names":["ListItem","props","text","id","deleteEntry","useState","TaskDone","setTaskDone","className","style","color","onClick","Tooltip","title","ToDoList","task","updateTask","tasksArray","updateArray","deleteTask","swal","icon","buttons","then","res","newArr","filter","taskObj","spellCheck","placeholder","onChange","e","target","value","Math","random","Button","length","map","index","ReactDOM","render","document","getElementById"],"mappings":"6NAsCeA,EAlCE,SAACC,GAAW,IACnBC,EAA0BD,EAA1BC,KAAMC,EAAoBF,EAApBE,GAAIC,EAAgBH,EAAhBG,YADQ,EAEMC,oBAAS,GAFf,mBAEnBC,EAFmB,KAETC,EAFS,KAG1B,OACE,6BACE,sBAAKC,UAAU,WAAf,UACE,cAAC,IAAD,CACEA,UAAU,SACVC,MAAOH,EAAW,CAAEI,MAAO,SAAY,CAAEA,MAAO,WAChDC,QAAS,WACPJ,GAAaD,MAIjB,cAACM,EAAA,EAAD,CAASC,MAAM,cAAf,SACE,cAAC,IAAD,CACEL,UAAU,SACVC,MAAO,CAAEC,MAAO,OAChBC,QAAS,WACPP,EAAYD,QAKlB,mBACEK,UAAU,WACVC,MAAOH,EAAW,CAAEI,MAAO,SAAY,CAAEA,MAAO,WAFlD,SAIGR,U,0CC4DIY,G,MApFE,WAAO,IAAD,EACMT,mBAAS,IADf,mBACdU,EADc,KACRC,EADQ,OAEaX,mBAAS,IAFtB,mBAEdY,EAFc,KAEFC,EAFE,KAWrB,SAASC,EAAWhB,GAElBiB,IAAK,CACHP,MAAO,UACPX,KAAM,kCACNmB,KAAM,UACNC,SAAS,IACRC,MAAK,SAACC,GACP,GAAIA,EAAK,CACP,IAAMC,EAASR,EAAWS,QAAO,SAACC,GAChC,OAAOA,EAAQxB,KAAOA,KAExBe,EAAYO,OAoBlB,OACE,sBAAKjB,UAAU,UAAf,UACE,oBAAIA,UAAU,UAAd,yBACA,sBAAKA,UAAU,aAAf,UACE,uBACEA,UAAU,WACVoB,WAAW,QACXC,YAAY,gBACZC,SAAU,SAACC,GACTf,EAAWe,EAAEC,OAAOC,QAEtBA,MAAOlB,IAET,cAACH,EAAA,EAAD,CAASC,MAAM,UAAf,SACE,cAAC,IAAD,CAAeF,QArDJ,WACJ,KAATI,IACFG,EAAY,GAAD,mBAAKD,GAAL,CAAiB,CAAEf,KAAMa,EAAMZ,GAAI+B,KAAKC,aACnDnB,EAAW,aAsDX,cAACJ,EAAA,EAAD,CAASC,MAAM,aAAf,SACE,cAACuB,EAAA,EAAD,CAAQ5B,UAAU,YAAYG,QAlCpC,WAC4B,IAAtBM,EAAWoB,QACbjB,IAAK,CACHP,MAAO,UACPX,KAAM,mCACNmB,KAAM,UACNC,SAAS,IACRC,MAAK,SAACC,GACHA,GACFN,EAAY,QAyBd,SACE,sBAAMV,UAAU,UAAhB,uBAIJ,qBAAKA,UAAU,QAAf,SACE,oBAAIA,UAAU,OAAd,SACGS,EAAWqB,KAAI,SAACX,EAASY,GACxB,OACE,cAAC,EAAD,CACErC,KAAMyB,EAAQzB,KAEdC,GAAIwB,EAAQxB,GACZC,YAAae,GAFRoB,eC9ErBC,IAASC,OAAO,cAAC,EAAD,IAAcC,SAASC,eAAe,W","file":"static/js/main.1f5166eb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nconst ListItem = (props) => {\r\n  const { text, id, deleteEntry } = props;\r\n  const [TaskDone, setTaskDone] = useState(false);\r\n  return (\r\n    <li>\r\n      <div className=\"listItem\">\r\n        <CheckCircleIcon\r\n          className=\"uiIcon\"\r\n          style={TaskDone ? { color: \"green\" } : { color: \"#123d66\" }}\r\n          onClick={() => {\r\n            setTaskDone(!TaskDone);\r\n          }}\r\n        />\r\n\r\n        <Tooltip title=\"Delete Item\">\r\n          <DeleteIcon\r\n            className=\"uiIcon\"\r\n            style={{ color: \"red\" }}\r\n            onClick={() => {\r\n              deleteEntry(id);\r\n            }}\r\n          />\r\n        </Tooltip>\r\n\r\n        <p\r\n          className=\"listText\"\r\n          style={TaskDone ? { color: \"green\" } : { color: \"#123d66\" }}\r\n        >\r\n          {text}\r\n        </p>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\nexport default ListItem;\r\n","import React, { useState } from \"react\";\r\nimport ListItem from \"./ListItem\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport swal from \"sweetalert\";\r\nimport \"./todolistStyle.css\";\r\n\r\nconst ToDoList = () => {\r\n  const [task, updateTask] = useState(\"\");\r\n  const [tasksArray, updateArray] = useState([]);\r\n\r\n  const addNewTask = () => {\r\n    if (task !== \"\") {\r\n      updateArray([...tasksArray, { text: task, id: Math.random() }]);\r\n      updateTask(\"\");\r\n    }\r\n  };\r\n\r\n  function deleteTask(id) {\r\n    //removing an entry from tasksArray\r\n    swal({\r\n      title: \"Warning\",\r\n      text: \"Do you really want to delete it\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n    }).then((res) => {\r\n      if (res) {\r\n        const newArr = tasksArray.filter((taskObj) => {\r\n          return taskObj.id !== id;\r\n        });\r\n        updateArray(newArr);\r\n      }\r\n    });\r\n  }\r\n\r\n  function removeAllTasks() {\r\n    if (tasksArray.length !== 0) {\r\n      swal({\r\n        title: \"Warning\",\r\n        text: \"Do you really want to Clear list\",\r\n        icon: \"warning\",\r\n        buttons: true,\r\n      }).then((res) => {\r\n        if (res) {\r\n          updateArray([]);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"mainDiv\">\r\n      <h1 className=\"heading\"> ToDo List </h1>\r\n      <div className=\"inputGroup\">\r\n        <input\r\n          className=\"inputBox\"\r\n          spellCheck=\"false\"\r\n          placeholder=\"New List Item\"\r\n          onChange={(e) => {\r\n            updateTask(e.target.value);\r\n          }}\r\n          value={task}\r\n        />\r\n        <Tooltip title=\"Add New\">\r\n          <AddCircleIcon onClick={addNewTask} />\r\n        </Tooltip>\r\n      </div>\r\n\r\n      <Tooltip title=\"Remove All\">\r\n        <Button className=\"removeAll\" onClick={removeAllTasks}>\r\n          <span className=\"btnText\">Clear</span>\r\n        </Button>\r\n      </Tooltip>\r\n\r\n      <div className=\"tasks\">\r\n        <ul className=\"list\">\r\n          {tasksArray.map((taskObj, index) => {\r\n            return (\r\n              <ListItem\r\n                text={taskObj.text}\r\n                key={index}\r\n                id={taskObj.id}\r\n                deleteEntry={deleteTask}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ToDoList;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport TodoList from \"./TodoListProject/ToDoList\";\r\nReactDOM.render(<TodoList />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}